# Rime schema
# encoding: utf-8

schema:
  schema_id: flysp
  name: 小鹤三拼
  version: '0.01'
  author:
    - ston <ston.jia@outlook.com>
  description: |
    參考以下作品而創作：
      小鹤双拼
      小鹤音形
      朙月拼音
  # dependencies:
  #   - stroke

switches:
  - name: ascii_mode
    reset: 0
    states: [ 中文, 西文 ]
  - name: full_shape
    states: [ 半角, 全角 ]
  - name: simplification
    states: [ 漢字, 汉字 ]
  - name: ascii_punct
    states: [ 。，, ．， ]

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - table_translator@custom_phrase
    - reverse_lookup_translator
    - script_translator
  filters:
    - simplifier
    - uniquifier

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcba`
  delimiter: " '"
  algebra:
    - derive/^(\w*);(\w)(\w)$/$1$2`$3/ # 三拼+`输入全码
    - derive/^(\w*);(\w)(\w)$/$1$2/ # 三拼
    - derive/^(\w*);(\w)(\w)$/$1/ # 双拼

translator:
  dictionary: flysp
  # preedit_format:
  #   - xform/([nl])v/$1ü/
  #   - xform/([nl])ue/$1üe/
  #   - xform/([jqxy])v/$1u/

custom_phrase:
  dictionary: ""
  user_dict: custom_phrase
  db_class: stabledb
  enable_completion: false
  enable_sentence: false
  initial_quality: 1

punctuator:
  import_preset: default
  full_shape:
    "/" : "／"
    "\\" : "、"
    "[" : "「"
    "]" : "」"
    "{" : "『"
    "}" : "』"
    "*" : "＊"
    "<" : "《"
    ">" : "》"
    "~" : "~"
    "$" : "￥"
    "%" : "％"
    "|" : "|"
  half_shape:
    "/" : "/"
    "\\" : "、"
    "[" : "「"
    "]" : "」"
    "{" : "『"
    "}" : "』"
    "*" : "*"
    "<" : "《"
    ">" : "》"
    "~" : "~"
    "$" : "$"
    "%" : "%"
    "|" : "|"

key_binder:
  bindings:
    - {accept: "Control+p", send: Up, when: composing}
    - {accept: "Control+n", send: Down, when: composing}
    - {accept: "Control+b", send: Left, when: composing}
    - {accept: "Control+f", send: Right, when: composing}
    - {accept: "Control+a", send: Home, when: composing}
    - {accept: "Control+e", send: End, when: composing}
    - {accept: "Control+d", send: Delete, when: composing}
    - {accept: "Control+k", send: "Shift+Delete", when: composing}
    - {accept: "Control+h", send: BackSpace, when: composing}
    - {accept: "Control+g", send: Escape, when: composing}
    - {accept: "Control+bracketleft", send: Escape, when: composing}
    - {accept: "Control+y", send: Page_Up, when: composing}
    - {accept: "Alt+v", send: Page_Up, when: composing}
    - {accept: "Control+v", send: Page_Down, when: composing}
    - {accept: ISO_Left_Tab, send: "Shift+Left", when: composing}
    - {accept: "Shift+Tab", send: "Shift+Left", when: composing}
    - {accept: Tab, send: "Shift+Right", when: composing}
    # 加减号翻页
    # - {accept: minus, send: Page_Up, when: has_menu}
    # - {accept: equal, send: Page_Down, when: has_menu}
    # 中括号翻页
    - {when: paging, accept: bracketleft, send: Page_Up }
    - {when: has_menu, accept: bracketright, send: Page_Down }
    - {accept: "Control+Shift+1", select: .next, when: always}
    - {accept: "Control+Shift+2", toggle: ascii_mode, when: always}
    - {accept: "Control+Shift+3", toggle: full_shape, when: always}
    - {accept: "Control+Shift+4", toggle: simplification, when: always}
    - {accept: "Control+Shift+5", toggle: extended_charset, when: always}
    - {accept: "Control+Shift+exclam", select: .next, when: always}
    - {accept: "Control+Shift+at", toggle: ascii_mode, when: always}
    - {accept: "Control+Shift+numbersign", toggle: full_shape, when: always}
    - {accept: "Control+Shift+dollar", toggle: simplification, when: always}
    - {accept: "Control+Shift+percent", toggle: extended_charset, when: always}
  import_preset: default

recognizer:
  import_preset: default

__patch:
  # 使用八股文語言模型
  - grammar:/hans?
  # 用家自選配置
  - flysp.custom:/patch?
